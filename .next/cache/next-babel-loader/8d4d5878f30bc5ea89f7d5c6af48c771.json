{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\other_study\\\\next.js\\\\nextjs-blog\\\\components\\\\email_fields\\\\email_fields.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport 'bulma/css/bulma.min.css';\n\nvar EmailField = function EmailField() {\n  var _useState = useState({\n    name: '',\n    email: '',\n    subject: 'StaticForms - Contact Form',\n    honeypot: '',\n    // if any value received in this field, form submission will be ignored.\n    message: '',\n    replyTo: '@',\n    // this will set replyTo of email to email address entered in the form\n    accessKey: 'you-access-key' // get your access key from https://www.staticforms.xyz\n\n  }),\n      contact = _useState[0],\n      setContact = _useState[1];\n\n  var _useState2 = useState({\n    type: '',\n    message: ''\n  }),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  var handleChange = function handleChange(e) {\n    return setContact(_objectSpread({}, contact, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var res, json;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch('https://api.staticforms.xyz/submit', {\n              method: 'POST',\n              body: JSON.stringify(contact),\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }));\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 7:\n            json = _context.sent;\n\n            if (json.success) {\n              setResponse({\n                type: 'success',\n                message: 'Thank you for reaching out to us.'\n              });\n            } else {\n              setResponse({\n                type: 'error',\n                message: json.message\n              });\n            }\n\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            console.log('An error occurred', _context.t0);\n            setResponse({\n              type: 'error',\n              message: 'An error occured while submitting the form'\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 11]], Promise);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"columns\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"column  is-two-thirds\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: response.type === 'success' ? 'tile box notification is-primary' : 'is-hidden',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, response.message)), __jsx(\"div\", {\n    className: response.type === 'error' ? 'tile box notification is-danger' : 'is-hidden',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, response.message)), __jsx(\"div\", {\n    className: response.message !== '' ? 'is-hidden' : 'columns',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"column content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }))), __jsx(\"div\", {\n    className: \"column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default EmailField;","map":{"version":3,"sources":["C:/Users/User/Documents/other_study/next.js/nextjs-blog/components/email_fields/email_fields.tsx"],"names":["useState","EmailField","name","email","subject","honeypot","message","replyTo","accessKey","contact","setContact","type","response","setResponse","handleChange","e","target","value","handleSubmit","preventDefault","fetch","method","body","JSON","stringify","headers","res","json","success","console","log"],"mappings":"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","sourcesContent":["\r\nimport { useState } from 'react';\r\nimport 'bulma/css/bulma.min.css';\r\n\r\nconst EmailField = () => {\r\n  const [contact, setContact] = useState({\r\n    name: '',\r\n    email: '',\r\n    subject: 'StaticForms - Contact Form',\r\n    honeypot: '', // if any value received in this field, form submission will be ignored.\r\n    message: '',\r\n    replyTo: '@', // this will set replyTo of email to email address entered in the form\r\n    accessKey: 'you-access-key' // get your access key from https://www.staticforms.xyz\r\n  });\r\n\r\n  const [response, setResponse] = useState({\r\n    type: '',\r\n    message: ''\r\n  });\r\n\r\n  const handleChange = e =>\r\n    setContact({ ...contact, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await fetch('https://api.staticforms.xyz/submit', {\r\n        method: 'POST',\r\n        body: JSON.stringify(contact),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n\r\n      const json = await res.json();\r\n\r\n      if (json.success) {\r\n        setResponse({\r\n          type: 'success',\r\n          message: 'Thank you for reaching out to us.'\r\n        });\r\n      } else {\r\n        setResponse({\r\n          type: 'error',\r\n          message: json.message\r\n        });\r\n      }\r\n    } catch (e) {\r\n      console.log('An error occurred', e);\r\n      setResponse({\r\n        type: 'error',\r\n        message: 'An error occured while submitting the form'\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className='section'>\r\n        <div className='container'>\r\n          <div className='columns'>\r\n            <div className='column' />\r\n            <div className='column  is-two-thirds'>\r\n              <div\r\n                className={\r\n                  response.type === 'success'\r\n                    ? 'tile box notification is-primary'\r\n                    : 'is-hidden'\r\n                }\r\n              >\r\n                <p>{response.message}</p>\r\n              </div>\r\n              <div\r\n                className={\r\n                  response.type === 'error'\r\n                    ? 'tile box notification is-danger'\r\n                    : 'is-hidden'\r\n                }\r\n              >\r\n                <p>{response.message}</p>\r\n              </div>\r\n              <div\r\n                className={response.message !== '' ? 'is-hidden' : 'columns'}\r\n              >\r\n                <div className='column content'>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className='column' />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailField;"]},"metadata":{},"sourceType":"module"}