{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\other_study\\\\next.js\\\\nextjs-blog\\\\pages\\\\_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport '../styles/global.css';\nimport { useRouter } from 'next/router';\nimport { useState, useEffect } from 'react';\nexport default function App(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction Loading() {\n  var router = useRouter();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  useEffect(function () {\n    var handleStart = function handleStart(url) {\n      return url !== router.pathname && setLoading(true);\n    }; // handleComplete event was not firing\n\n\n    var handleComplete = function handleComplete(url) {\n      return url === router.pathname && setLoading(false);\n    };\n\n    router.events.on('routeChangeStart', handleStart);\n    router.events.on('routeChangeComplete', handleComplete);\n    router.events.on('routeChangeError', handleComplete);\n    return function () {\n      router.events.off('routeChangeStart', handleStart);\n      router.events.off('routeChangeComplete', handleComplete);\n      router.events.off('routeChangeError', handleComplete);\n    };\n  });\n  return loading && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }\n  }, \"Loading....\");\n}","map":{"version":3,"sources":["C:/Users/User/Documents/other_study/next.js/nextjs-blog/pages/_app.tsx"],"names":["useRouter","useState","useEffect","App","Component","pageProps","Loading","router","loading","setLoading","handleStart","url","pathname","handleComplete","events","on","off"],"mappings":";;;;AAAA,OAAO,sBAAP;AAEA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,GAAT,OAAiD;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAC9D,SAAO,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,SAASC,OAAT,GAAmB;AACjB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;;AADiB,kBAGaC,QAAQ,CAAC,KAAD,CAHrB;AAAA,MAGVO,OAHU;AAAA,MAGDC,UAHC;;AAKjBP,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD;AAAA,aAAUA,GAAG,KAAKJ,MAAM,CAACK,QAAhB,IAA6BH,UAAU,CAAC,IAAD,CAAhD;AAAA,KAApB,CADY,CAEZ;;;AACA,QAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACF,GAAD;AAAA,aAAUA,GAAG,KAAKJ,MAAM,CAACK,QAAhB,IAA6BH,UAAU,CAAC,KAAD,CAAhD;AAAA,KAAvB;;AAEAF,IAAAA,MAAM,CAACO,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCL,WAArC;AACAH,IAAAA,MAAM,CAACO,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCF,cAAxC;AACAN,IAAAA,MAAM,CAACO,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCF,cAArC;AAEA,WAAO,YAAM;AACTN,MAAAA,MAAM,CAACO,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCN,WAAtC;AACAH,MAAAA,MAAM,CAACO,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCH,cAAzC;AACAN,MAAAA,MAAM,CAACO,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCH,cAAtC;AACH,KAJD;AAKH,GAdQ,CAAT;AAgBA,SAAOL,OAAO,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAnB;AACD","sourcesContent":["import '../styles/global.css'\r\nimport { AppProps } from 'next/app'\r\nimport { useRouter } from 'next/router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function App({ Component, pageProps }: AppProps) {\r\n  return <Component {...pageProps} />\r\n}\r\n\r\nfunction Loading() {\r\n  const router = useRouter();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n      const handleStart = (url) => (url !== router.pathname) && setLoading(true);\r\n      // handleComplete event was not firing\r\n      const handleComplete = (url) => (url === router.pathname) && setLoading(false);\r\n\r\n      router.events.on('routeChangeStart', handleStart)\r\n      router.events.on('routeChangeComplete', handleComplete)\r\n      router.events.on('routeChangeError', handleComplete)\r\n\r\n      return () => {\r\n          router.events.off('routeChangeStart', handleStart)\r\n          router.events.off('routeChangeComplete', handleComplete)\r\n          router.events.off('routeChangeError', handleComplete)\r\n      }\r\n  })\r\n  \r\n  return loading && (<div>Loading....{/*I have an animation here*/}</div>);\r\n}"]},"metadata":{},"sourceType":"module"}