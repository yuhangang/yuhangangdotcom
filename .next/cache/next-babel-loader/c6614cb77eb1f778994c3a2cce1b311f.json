{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport styles from './NavBar.module.scss';\nimport React from 'react';\nimport NavBar1 from './NavBar1'; //import  '../../state/responsive_controller';\n\n/*\r\nlet prevScrollpos = window.pageYOffset;\r\nwindow.onscroll = function() {\r\n  let currentScrollPos = window.pageYOffset;\r\n  if (prevScrollpos > currentScrollPos) {\r\n    document.getElementById(\"Nav\").style.top = \"0\";\r\n  } else {\r\n    document.getElementById(\"Nav\").style.top = \"-50px\";\r\n  }\r\n  prevScrollpos = currentScrollPos;\r\n}\r\n*/\n\nvar DesNav1 = function DesNav1() {\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: styles.topFixed\n  }, __jsx(\"div\", null), __jsx(\"div\", {\n    className: styles.sticky\n  }, __jsx(\"div\", {\n    className: styles.NavBarDesktop\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"div\", {\n    className: styles.h3\n  }, \"yuhangang\")), __jsx(\"div\", {\n    className: styles.container\n  }), __jsx(Link, {\n    href: \"/about\",\n    prefetch: true\n  }, __jsx(\"div\", {\n    className: styles.NavBarButtons\n  }, \"About\")), __jsx(Link, {\n    href: \"/projects\",\n    prefetch: true\n  }, __jsx(\"div\", {\n    className: styles.NavBarButtons\n  }, \"Projects\")), __jsx(\"a\", {\n    href: \"mailto:redrainhang@gmail.com\",\n    className: styles.NavBarButtons,\n    target: \"_blank\"\n  }, \"Contact\")), __jsx(\"div\", {\n    className: styles.secondBar\n  }))));\n};\n\nvar DesNav = function DesNav() {\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: styles.topFixed\n  }, __jsx(\"div\", null), __jsx(\"div\", {\n    className: styles.sticky\n  }, __jsx(NavBar1, null))));\n};\n\nvar MobileNav = function MobileNav() {\n  return __jsx(\"div\", {\n    className: styles.NavBarMobile\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"div\", {\n    className: styles.mobileh3\n  }, \"yuhangang\")));\n};\n\nvar NavNew = function NavNew() {\n  var _React$useState = React.useState(window.innerWidth),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      width = _React$useState2[0],\n      setWidth = _React$useState2[1];\n\n  var breakpoint = 620;\n  React.useEffect(function () {\n    /* Inside of a \"useEffect\" hook add an event listener that updates\r\n       the \"width\" state variable when the window size changes */\n    window.addEventListener(\"resize\", function () {\n      return setWidth(window.innerWidth);\n    });\n    /* passing an empty array as the dependencies of the effect will cause this\r\n       effect to only run when the component mounts, and not each time it updates.\r\n       We only want the listener to be added once */\n  }, []);\n  return width < breakpoint ? __jsx(MobileNav, null) : __jsx(DesNav, null);\n};\n\nexport default DesNav;","map":null,"metadata":{},"sourceType":"module"}