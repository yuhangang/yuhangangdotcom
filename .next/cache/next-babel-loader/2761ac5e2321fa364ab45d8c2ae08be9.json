{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\other_study\\\\next.js\\\\nextjs-blog\\\\components\\\\popUp\\\\popup_screen.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport { useMediaQuery, DialogContent, DialogTitle, DialogActions } from '@material-ui/core';\n\nvar styles = function styles(theme) {\n  return createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    },\n    dialog: {\n      position: 'fixed',\n      left: 10,\n      top: 50\n    }\n  });\n};\n\nvar useStyles = makeStyles({\n  dialog: {\n    position: 'absolute',\n    left: 10,\n    top: 50\n  }\n});\nexport default function ResponsiveDialog() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var theme = useTheme();\n  var fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }\n  }, \"Open responsive dialog\"), __jsx(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Use Google's location service?\"), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\")), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Disagree\"), __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Agree\"))));\n}","map":{"version":3,"sources":["C:/Users/User/Documents/other_study/next.js/nextjs-blog/components/popUp/popup_screen.tsx"],"names":["React","createStyles","makeStyles","useTheme","Button","Dialog","DialogContentText","useMediaQuery","DialogContent","DialogTitle","DialogActions","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","dialog","left","useStyles","ResponsiveDialog","useState","open","setOpen","fullScreen","breakpoints","down","handleClickOpen","handleClose"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { createStyles, Theme, withStyles, WithStyles, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport style from './popup.module.scss';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { useMediaQuery, DialogContent, DialogTitle, DialogActions } from '@material-ui/core';\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n    dialog: {\r\n        position: 'fixed',\r\n        left: 10,\r\n        top: 50\r\n      }\r\n  });\r\n  \r\n  const useStyles = makeStyles({\r\n    dialog: {\r\n      position: 'absolute',\r\n      left: 10,\r\n      top: 50\r\n    }\r\n  });\r\n\r\n  \r\n  export default function ResponsiveDialog()  {\r\n \r\n\r\nconst [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div >\r\n       <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open responsive dialog\r\n      </Button>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}