{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\other_study\\\\next.js\\\\nextjs-blog\\\\pages\\\\_app.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport '../styles/global.css';\nimport { useRouter } from 'next/router';\nimport { useState, useEffect } from 'react';\nexport default function App({\n  Component,\n  pageProps\n}) {\n  return __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }\n  }));\n}\n\nfunction Loading() {\n  const router = useRouter();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    const handleStart = url => url !== router.pathname && setLoading(true); // handleComplete event was not firing\n\n\n    const handleComplete = url => url === router.pathname && setLoading(false);\n\n    router.events.on('routeChangeStart', handleStart);\n    router.events.on('routeChangeComplete', handleComplete);\n    router.events.on('routeChangeError', handleComplete);\n    return () => {\n      router.events.off('routeChangeStart', handleStart);\n      router.events.off('routeChangeComplete', handleComplete);\n      router.events.off('routeChangeError', handleComplete);\n    };\n  });\n  return loading && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }\n  }, \"Loading....\");\n}","map":{"version":3,"sources":["C:/Users/User/Documents/other_study/next.js/nextjs-blog/pages/_app.tsx"],"names":["useRouter","useState","useEffect","App","Component","pageProps","Loading","router","loading","setLoading","handleStart","url","pathname","handleComplete","events","on","off"],"mappings":";;;;;;AAAA,OAAO,sBAAP;AAEA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,GAAT,CAAa;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAb,EAAiD;AAC9D,SAAO,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,SAASC,OAAT,GAAmB;AACjB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,WAAW,GAAIC,GAAD,IAAUA,GAAG,KAAKJ,MAAM,CAACK,QAAhB,IAA6BH,UAAU,CAAC,IAAD,CAApE,CADY,CAEZ;;;AACA,UAAMI,cAAc,GAAIF,GAAD,IAAUA,GAAG,KAAKJ,MAAM,CAACK,QAAhB,IAA6BH,UAAU,CAAC,KAAD,CAAvE;;AAEAF,IAAAA,MAAM,CAACO,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCL,WAArC;AACAH,IAAAA,MAAM,CAACO,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCF,cAAxC;AACAN,IAAAA,MAAM,CAACO,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCF,cAArC;AAEA,WAAO,MAAM;AACTN,MAAAA,MAAM,CAACO,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCN,WAAtC;AACAH,MAAAA,MAAM,CAACO,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCH,cAAzC;AACAN,MAAAA,MAAM,CAACO,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCH,cAAtC;AACH,KAJD;AAKH,GAdQ,CAAT;AAgBA,SAAOL,OAAO,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAnB;AACD","sourcesContent":["import '../styles/global.css'\r\nimport { AppProps } from 'next/app'\r\nimport { useRouter } from 'next/router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function App({ Component, pageProps }: AppProps) {\r\n  return <Component {...pageProps} />\r\n}\r\n\r\nfunction Loading() {\r\n  const router = useRouter();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n      const handleStart = (url) => (url !== router.pathname) && setLoading(true);\r\n      // handleComplete event was not firing\r\n      const handleComplete = (url) => (url === router.pathname) && setLoading(false);\r\n\r\n      router.events.on('routeChangeStart', handleStart)\r\n      router.events.on('routeChangeComplete', handleComplete)\r\n      router.events.on('routeChangeError', handleComplete)\r\n\r\n      return () => {\r\n          router.events.off('routeChangeStart', handleStart)\r\n          router.events.off('routeChangeComplete', handleComplete)\r\n          router.events.off('routeChangeError', handleComplete)\r\n      }\r\n  })\r\n  \r\n  return loading && (<div>Loading....{/*I have an animation here*/}</div>);\r\n}"]},"metadata":{},"sourceType":"module"}